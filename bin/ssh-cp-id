#!/usr/bin/perl
# Author: Jazz Yao-Tsung Wang <jazzwang.tw@gmail.com>
#
# v0.2: 2012-05-05 for hiCloud ssh key exchange
# v0.1: 2007-09-28 for THSRC Neihu line NMS
#
# modified from the sample program of ssh.pl writed by 
# Jeff Carr <jcarr@linuxmachines.com> which is in the debian package 
# named libexpect-perl. Check the following file for detail:
# /usr/share/doc/libexpect-perl/examples/ssh.pl
#
#      A Simple Terminal Resizing Example
#      GPL version 2. See the COPYING file
#
# This script is a simple example of how handle terminal
# window resize events (transmitted via the WINCH signal)
# -- Jeff Carr <jcarr@linuxmachines.com>
#

if( ! defined $ARGV[0] ) {
	print "Usage: $0 <host> <username> <password>\n";
	exit;
}

my ($host, $username, $password) = @ARGV;

use Expect;
use IO::Pty;

my $spawn = new Expect;
$spawn->raw_pty(1);  
$spawn=Expect->spawn("ssh-copy-id $username\@$host");
# log everything if you want
# $spawn->log_file("/tmp/autossh.log.$$");

my $ret = $spawn->expect(180,
	[ qr/\(yes\/no\)\?\s*$/ => sub { $spawn->send("yes\n"); exp_continue; } ],
	[ qr/assword:\s*$/ 	=> sub { $spawn->send("$password\n"); exp_continue; } ],
	[ qr/ogin:\s*$/		=> sub { $spawn->send("$username\n"); exp_continue; } ],
	[ qr/REMOTE HOST IDEN/ 	=> sub { print "FIX: .ssh/known_hosts\n"; exp_continue; } ],
);
exit;
